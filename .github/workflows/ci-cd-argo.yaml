name: CI/CD ArgoCD

on:
  push:
    branches:
      - develop

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código fonte
      - name: Checkout source
        uses: actions/checkout@v4

      # 2️⃣ Configurar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # 3️⃣ Build do JAR
      - name: Build JAR
        run: mvn clean package -DskipTests

      # 4️⃣ Login no GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5️⃣ Build e push da imagem Docker com tag do commit
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME=ghcr.io/${{ github.repository }}/java-k8s:${IMAGE_TAG}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # 6️⃣ Checkout do repositório de manifests
      - name: Checkout manifests repository
        uses: actions/checkout@v4
        with:
          repository: rodrigonascimento001/java-k8s-manifests
          token: ${{ secrets.GH_PAT }}
          path: java-k8s-manifests

      # 7️⃣ Atualizar imagem diretamente no deployment.yaml
      - name: Update image in deployment.yaml
        run: |
          cd java-k8s-manifests
          git config user.name "ci-bot"
          git config user.email "ci-bot@github.com"

          DEPLOYMENT_FILE=my-app/deployment.yaml
          sed -i "s|image:.*|image: ghcr.io/${{ github.repository }}/java-k8s:${IMAGE_TAG}|g" $DEPLOYMENT_FILE

          git add $DEPLOYMENT_FILE
          git commit -m "chore: update image to $IMAGE_TAG [ci skip]" || echo "No changes to commit"
          git push
