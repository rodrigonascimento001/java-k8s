name: CI/CD ArgoCD

on:
  push:
    branches:
      - develop

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código fonte
      - name: Checkout source
        uses: actions/checkout@v4

      # 2️⃣ Configurar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # 3️⃣ Build do JAR
      - name: Build JAR
        run: mvn clean package -DskipTests

      # 4️⃣ Login no GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5️⃣ Build e push da imagem Docker com tag do commit
      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/rodrigonascimento001/java-k8s/my-app:latest .
          docker push ghcr.io/rodrigonascimento001/java-k8s/my-app:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 6️⃣ Checkout do repositório de manifests
      - name: Checkout manifests repository
        uses: actions/checkout@v4
        with:
          repository: rodrigonascimento001/java-k8s-manifests
          token: ${{ secrets.GH_PAT }}
          path: java-k8s-manifests

      # 7️⃣ Atualizar imagem diretamente no deployment.yaml
      - name: Deploy with kubectl
        run: |
          kubectl apply -f deployment.yaml -n java-k8s
          kubectl apply -f service.yaml -n java-k8s
          kubectl apply -f ingress.yaml -n java-k8s