name: build-test-deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Instalar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Definir tag única (timestamp + commit SHA curto)
      - name: Define image tag
        id: vars
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      # 4. Build da imagem com a nova tag
      - name: Build Spring Boot image
        run: mvn -B spring-boot:build-image -Dspring-boot.build-image.imageName=springboot-kind-demo:${{ env.TAG }}

      # 5. (Opcional) Push da imagem para registry
      # Exemplo com GitHub Container Registry (GHCR)
      # - name: Login to GHCR
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      # - name: Push image
      #   run: docker push ghcr.io/${{ github.repository }}/springboot-kind-demo:${{ env.TAG }}

      # 6. Atualizar values.yaml com a nova tag
      - name: Update Helm values.yaml
        run: |
          sed -i "s|tag:.*|tag: \"${TAG}\"|" charts/springboot-demo/values.yaml
          cat charts/springboot-demo/values.yaml

      # 7. Commit e push da atualização no Chart
      - name: Commit and push updated values.yaml
        run: |
          git config user.email "ci-bot@example.com"
          git config user.name "ci-bot"
          git add charts/springboot-demo/values.yaml
          git commit -m "Update image tag to ${TAG} [skip ci]" || echo "No changes"
          git push origin ${{ github.ref }}

      # 8. Debug (opcional, só para checar o values.yaml final)
      - name: Show final values.yaml
        run: cat charts/springboot-demo/values.yaml
